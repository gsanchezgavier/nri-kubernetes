apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:56Z"
    generateName: ksm-kube-state-metrics-6b8c5674b6-
    labels:
      app.kubernetes.io/instance: ksm
      app.kubernetes.io/name: kube-state-metrics
      pod-template-hash: 6b8c5674b6
    name: ksm-kube-state-metrics-6b8c5674b6-rgd4p
    namespace: ksm
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ksm-kube-state-metrics-6b8c5674b6
      uid: 73795d74-ade8-4439-aa65-e71fd7d69261
    resourceVersion: "713"
    uid: edd524b5-7692-4238-94d0-3370197039fd
  spec:
    containers:
    - args:
      - --collectors=certificatesigningrequests
      - --collectors=configmaps
      - --collectors=cronjobs
      - --collectors=daemonsets
      - --collectors=deployments
      - --collectors=endpoints
      - --collectors=horizontalpodautoscalers
      - --collectors=ingresses
      - --collectors=jobs
      - --collectors=limitranges
      - --collectors=mutatingwebhookconfigurations
      - --collectors=namespaces
      - --collectors=networkpolicies
      - --collectors=nodes
      - --collectors=persistentvolumeclaims
      - --collectors=persistentvolumes
      - --collectors=poddisruptionbudgets
      - --collectors=pods
      - --collectors=replicasets
      - --collectors=replicationcontrollers
      - --collectors=resourcequotas
      - --collectors=secrets
      - --collectors=services
      - --collectors=statefulsets
      - --collectors=storageclasses
      - --collectors=validatingwebhookconfigurations
      - --collectors=volumeattachments
      - --telemetry-port=8081
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: ksm-kube-state-metrics-token-kcqxr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: ksm-kube-state-metrics
    serviceAccountName: ksm-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: ksm-kube-state-metrics-token-kcqxr
      secret:
        defaultMode: 420
        secretName: ksm-kube-state-metrics-token-kcqxr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f18bbf713dd7769647968cfb6f5e12c028e327c6764f0afd04fdb37a6f130854
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imageID: docker-pullable://k8s.gcr.io/kube-state-metrics/kube-state-metrics@sha256:47d3a12d9da6699a9d95df8aaff235305229ef08203fae3fc1f1d47b2a409f89
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.8
    podIPs:
    - ip: 172.17.0.8
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:52Z"
    generateName: coredns-74ff55c5b-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 74ff55c5b
    name: coredns-74ff55c5b-hkrfm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-74ff55c5b
      uid: 9fc328d2-89e3-48c7-a14e-8bce72cab4d3
    resourceVersion: "606"
    uid: d6f3c69d-da85-4d37-b154-c429e5f27e2e
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns:1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-6dw5m
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: coredns-token-6dw5m
      secret:
        defaultMode: 420
        secretName: coredns-token-6dw5m
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d2414dc8fd6c5b63a22a25095bddb8f2f0049794b96f877581f67d40e17321ae
      image: k8s.gcr.io/coredns:1.7.0
      imageID: docker://sha256:bfe3a36ebd2528b454be6aebece806db5b40407b833e2af9617bf39afaff8c16
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.7
    podIPs:
    - ip: 172.17.0.7
    qosClass: Burstable
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: fdf343f18285bfd826fdb0a8403cc1a4
      kubernetes.io/config.mirror: fdf343f18285bfd826fdb0a8403cc1a4
      kubernetes.io/config.seen: "2021-11-30T15:28:37.684515778Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-11-30T15:28:44Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d81427d0-5fa5-4243-8f36-0d350e4386b4
    resourceVersion: "337"
    uid: 01130956-6d22-4cf4-aa8f-aeaaacc57c81
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=minikube=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.13-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [etcd]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [etcd]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3e9d63a73eea8645231e1a5c5f0d998c5d434f65dfbb5ca47398c803b57712de
      image: k8s.gcr.io/etcd:3.4.13-0
      imageID: docker://sha256:0369cf4303ffdb467dc219990960a9baa8512a54b0ad9283eaf55bd6c0adb934
      lastState: {}
      name: etcd
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-11-30T15:28:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 111a5e8cc40bc069444daba1b0a430c7
      kubernetes.io/config.mirror: 111a5e8cc40bc069444daba1b0a430c7
      kubernetes.io/config.seen: "2021-11-30T15:28:37.684518595Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-11-30T15:28:44Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d81427d0-5fa5-4243-8f36-0d350e4386b4
    resourceVersion: "336"
    uid: 264d946e-25be-4113-9af3-7500093b0327
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.20.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e9d83a8949831bb9f56a661afa00d4903779b921e71206ebb57d2e76b9ff7c9a
      image: k8s.gcr.io/kube-apiserver:v1.20.13
      imageID: docker://sha256:d862ea5b2791f37bb4f26de056cddf94cdd3a7639c0c92597c3aed928f36a655
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-11-30T15:28:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 3b49c1da7afbe94b739c56c887998bae
      kubernetes.io/config.mirror: 3b49c1da7afbe94b739c56c887998bae
      kubernetes.io/config.seen: "2021-11-30T15:28:37.684519642Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-11-30T15:28:44Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d81427d0-5fa5-4243-8f36-0d350e4386b4
    resourceVersion: "338"
    uid: bf6ca40e-d0b2-45fc-a549-4c76dfb814b4
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --port=0
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.20.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [kube-controller-manager]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [kube-controller-manager]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d0c1ca8d8c37fd03f12c629bb77d5a53ac08956dbb4058bab4c5e35f3bf32344
      image: k8s.gcr.io/kube-controller-manager:v1.20.13
      imageID: docker://sha256:03ec922c75bc0c130def967ae6dd55d7baf33279a043b53fa378f14e06aac697
      lastState: {}
      name: kube-controller-manager
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-11-30T15:28:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:52Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: d4885ff68
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-kl6cn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: bd21fe40-2e7f-4aec-9ad6-768419bf6e13
    resourceVersion: "456"
    uid: 31b9c8af-745c-4504-9856-7dc9c61d6f4a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.20.13
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-zkl5l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-zkl5l
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-zkl5l
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5aad01742762d69ea0363f8a2e3dc636ebc1732b153f4b85aa959e3ccc02ab02
      image: k8s.gcr.io/kube-proxy:v1.20.13
      imageID: docker://sha256:b787d85289412df3da0d6ff542cbbf3620ac4121e15a1988166d40ba57016d11
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 616f3c2c09b3150be276d2743fe43ea6
      kubernetes.io/config.mirror: 616f3c2c09b3150be276d2743fe43ea6
      kubernetes.io/config.seen: "2021-11-30T15:28:37.684520465Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-11-30T15:28:44Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d81427d0-5fa5-4243-8f36-0d350e4386b4
    resourceVersion: "334"
    uid: 6170cbef-feee-4ebc-941c-4684d0c8acbd
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.20.13
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [kube-scheduler]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      message: 'containers with unready status: [kube-scheduler]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://855c7c67cfa0a79e9a48d4cc06ce4fd045f14b2d9eeb5ab38254a593c5672b53
      image: k8s.gcr.io/kube-scheduler:v1.20.13
      imageID: docker://sha256:70ae19262a81239c1f8c8fb46f7b1be694f1a4493313f56c119b86a6122410a0
      lastState: {}
      name: kube-scheduler
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-11-30T15:28:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:54Z"
    generateName: metrics-server-7894db45f8-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7894db45f8
    name: metrics-server-7894db45f8-nghqj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7894db45f8
      uid: 97b39a8c-ed32-42f6-bc42-411dbacf83d6
    resourceVersion: "627"
    uid: bf42a3b3-bab1-418e-bdb9-25705425dd3c
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-insecure-tls
      image: k8s.gcr.io/metrics-server/metrics-server:v0.4.2@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez?exclude=readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz?exclude=livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 300Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-vmlhj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-vmlhj
      secret:
        defaultMode: 420
        secretName: metrics-server-token-vmlhj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6a5cb1b35c812ba7a510996b6d8dd67442523b5b9f73be53929c7c77575b0f43
      image: k8s.gcr.io/metrics-server/metrics-server@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      imageID: docker-pullable://k8s.gcr.io/metrics-server/metrics-server@sha256:dbc33d7d35d2a9cc5ab402005aa7a0d13be6192f3550c7d42cba8d2d5e3a5d62
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:03Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.2
    podIPs:
    - ip: 172.17.0.2
    qosClass: Burstable
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2021-11-30T15:28:39Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "605"
    uid: 840e37c2-0d09-4b2d-bcab-21b98b5dca6b
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: storage-provisioner-token-bpskv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: storage-provisioner-token-bpskv
      secret:
        defaultMode: 420
        secretName: storage-provisioner-token-bpskv
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7a5d9c87a2dd18e0f669c0155ae3f822cd59f98462094992de6bf5ba40d353a1
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: docker://sha256:6e38f40d628db3002f5617342c8872c935de530d867d0f709a2fbda1a302a562
      lastState: {}
      name: storage-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:28:58Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: mock
    creationTimestamp: "2021-11-30T15:28:54Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-container-creating
    namespace: mock
    resourceVersion: "696"
    uid: b82304b5-5fb7-4634-8372-1d9f233aae65
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources:
        limits:
          cpu: 5m
          memory: 5M
        requests:
          cpu: 5m
          memory: 5M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      message: 'containers with unready status: [alpine]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: alpine:latest
      imageID: ""
      lastState: {}
      name: alpine
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: 'Error response from daemon: Minimum memory limit allowed is 6MB'
          reason: CreateContainerError
    hostIP: 192.168.49.2
    phase: Pending
    podIP: 172.17.0.3
    podIPs:
    - ip: 172.17.0.3
    qosClass: Guaranteed
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:54Z"
    generateName: e2e-hpa-557f895878-
    labels:
      app: hpa
      pod-template-hash: 557f895878
      run: php-apache
    name: e2e-hpa-557f895878-9tkm8
    namespace: mock
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-hpa-557f895878
      uid: b06ca5bb-f58c-4f14-a62f-37c4c543a465
    resourceVersion: "672"
    uid: a5d7f9a8-f460-4f38-a19d-43381e1da073
  spec:
    containers:
    - image: k8s.gcr.io/hpa-example
      imagePullPolicy: Always
      name: php-apache
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 500m
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://98e5cbdbc6671b58fa6a25c7fd516de2a3e16669fa93c1ad89d003794ef0ef03
      image: k8s.gcr.io/hpa-example:latest
      imageID: docker-pullable://k8s.gcr.io/hpa-example@sha256:581697a37f0e136db86d6b30392f0db40ce99c8248a7044c770012f4e8491544
      lastState: {}
      name: php-apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:27Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.4
    podIPs:
    - ip: 172.17.0.4
    qosClass: Burstable
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:54Z"
    generateName: e2e-hpa-
    labels:
      app: daemonset
      controller-revision-hash: 6f4c45667b
      pod-template-generation: "1"
    name: e2e-hpa-vhjkl
    namespace: mock
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: e2e-hpa
      uid: 3517c1e4-02a8-4b71-a305-dcf1fc812751
    resourceVersion: "681"
    uid: 2596ff36-8c1c-4913-b14c-e1e373efd253
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://13603e6fba3cd730473b6a956cb208e90661f646778f1c00eab35fca0907e9f1
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:52817dece4cfe26f581c834d27a8e1bcc82194f914afe6d50afad5a101234ef1
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:29Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.6
    podIPs:
    - ip: 172.17.0.6
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      meta.helm.sh/release-name: e2e
      meta.helm.sh/release-namespace: mock
    creationTimestamp: "2021-11-30T15:28:54Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: e2e-pending
    namespace: mock
    resourceVersion: "492"
    uid: 1dbe619f-cebf-43ea-96c5-7ddd4cf7998d
  spec:
    containers:
    - image: alpine:latest
      imagePullPolicy: Always
      name: alpine
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeSelector:
      not-existing: not-existing
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      message: '0/1 nodes are available: 1 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:54Z"
    generateName: e2e-scraper-9c979498b-
    labels:
      app: scraper
      pod-template-hash: 9c979498b
    name: e2e-scraper-9c979498b-wqt5h
    namespace: mock
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: e2e-scraper-9c979498b
      uid: e920b067-fb83-4aca-a164-342e5272c987
    resourceVersion: "657"
    uid: 6976fb7f-b695-4bce-8a08-d9fc7b81197f
  spec:
    containers:
    - args:
      - -c
      - |
        apk add curl bash
        sleep 24h
      command:
      - sh
      image: alpine
      imagePullPolicy: IfNotPresent
      name: e2e-scraper
      readinessProbe:
        exec:
          command:
          - which
          - bash
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: e2e-scraper-token-4z2gc
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: e2e-scraper
    serviceAccountName: e2e-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: e2e-scraper-token-4z2gc
      secret:
        defaultMode: 420
        secretName: e2e-scraper-token-4z2gc
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://61ea8e21cd30398630fcf46eb746bf249ba8b512f8e031c30dbb26dabbba7c6b
      image: alpine:latest
      imageID: docker-pullable://alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300
      lastState: {}
      name: e2e-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:07Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:28:54Z"
    generateName: e2e-stateful-set-
    labels:
      app: statefulset
      controller-revision-hash: e2e-stateful-set-779655bc59
      statefulset.kubernetes.io/pod-name: e2e-stateful-set-0
    name: e2e-stateful-set-0
    namespace: mock
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-stateful-set
      uid: 38abaa28-1994-4480-a9ae-11b5afadca65
    resourceVersion: "641"
    uid: 10496e83-eb94-46c4-9374-245cf71927c0
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-stateful-set-0
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:28:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b30ecab0e84265efd1d6462573f88a17f41bfdb4d2b905002a49c5ddfa0b1441
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:52817dece4cfe26f581c834d27a8e1bcc82194f914afe6d50afad5a101234ef1
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:11Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.5
    podIPs:
    - ip: 172.17.0.5
    qosClass: BestEffort
    startTime: "2021-11-30T15:28:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-11-30T15:29:12Z"
    generateName: e2e-stateful-set-
    labels:
      app: statefulset
      controller-revision-hash: e2e-stateful-set-779655bc59
      statefulset.kubernetes.io/pod-name: e2e-stateful-set-1
    name: e2e-stateful-set-1
    namespace: mock
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: e2e-stateful-set
      uid: 38abaa28-1994-4480-a9ae-11b5afadca65
    resourceVersion: "702"
    uid: 8a3c1ba8-1362-4c00-9e45-7497d23b7c5b
  spec:
    containers:
    - args:
      - sleep
      - infinity
      image: busybox
      imagePullPolicy: Always
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-cj2vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: e2e-stateful-set-1
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: statefulset
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-cj2vr
      secret:
        defaultMode: 420
        secretName: default-token-cj2vr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-11-30T15:29:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4b19c0c49b910589c719a385db72fed9b794f1f9334ce8172b005c71443f4ecc
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:52817dece4cfe26f581c834d27a8e1bcc82194f914afe6d50afad5a101234ef1
      lastState: {}
      name: busybox
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-11-30T15:29:37Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.9
    podIPs:
    - ip: 172.17.0.9
    qosClass: BestEffort
    startTime: "2021-11-30T15:29:12Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
